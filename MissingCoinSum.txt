#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
//const long long mod = 1e9+7;
//const long long mod =1000000007;
const long long mod = 998244353;
const long long int special_prime = 982451653;
using namespace std;
#define ll long long int
#define FAST ios_base::sync_with_stdio(false);cin.tie();cout.tie();
#define Min(a, b) ((a < b) ? a : b)
#define Max(a, b) ((a < b) ? b : a)

void init_code()
{
FAST;
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
     freopen("output.txt","w",stdout);
#endif

}
const int rn= 3e5+5;
const int MX=200001;
ll n,m,k;
vector<ll>adj[MX];
ll a[MX],b[MX],c[MX];
ll vis[MX],dp[MX];
int check=0;

int main()
{
init_code();
cout<<setprecision(12)<<fixed;
int tes=1;
//cin>>tes;
while(tes--)
{
     cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
   sort(a+1,a+n+1);
memset(dp,0,sizeof(dp));
dp[0]=1;
for(int i=1;i<n;i++)
{
if(dp[i-1]<a[i])
{
    cout<<dp[i-1]<<endl;
    return 0;
}
dp[i]=dp[i-1]+a[i];

}
cout<<dp[n]<<endl;
}
return 0; 
}   
// thinks of patterns in 0101 1010 ABABA
// look for 0,1,2 as only solutions
// don't get stuck with binary search
// spend more time
// consider n=0,n=1 in cases 